{"version":3,"sources":["components/Length.jsx","components/Clock.jsx","index.js"],"names":["Length","title","changeTime","type","time","formatTime","idlabel","iddecrement","idincrement","idtitle","className","id","onClick","class","Clock","timeInSeg","num","timeInMin","React","useState","displayTime","setDisplayTime","breakTime","setBreakTime","sessionTime","setSessionTime","timerOn","setTimerOn","onBreak","setOnBreak","Audio","breakAudio","reproducirBreak","currentTime","play","cantidad","minutes","Math","floor","seconds","clockify","Date","getTime","nDate","onBreakVar","intervalo","setInterval","localStorage","clear","setItem","clearInterval","getItem","controlTimer","ReactDOM","render","document","getElementById"],"mappings":"6KA6BeA,EA3BA,SAAC,GAUT,IATHC,EASE,EATFA,MACAC,EAQE,EARFA,WACAC,EAOE,EAPFA,KACAC,EAME,EANFA,KACAC,EAKE,EALFA,WACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,YACAC,EACE,EADFA,QAEA,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAiBC,GAAIL,EAApC,SAA+CL,IAC/C,sBAAKS,UAAU,mBAAf,UACI,wBAAQC,GAAIJ,EACRK,QAAS,kBAAMV,GAAY,GAAIC,IADnC,SAEC,mBAAGU,MAAM,wBACV,oBAAIF,GAAIF,EAAR,SAAkBJ,EAAWD,KAC7B,wBAAQO,GAAIH,EACRI,QAAS,kBAAMV,EAAW,GAAIC,IADlC,SAEC,mBAAGU,MAAM,6BCiIXC,EApJD,WACV,IAAMC,EAAY,SAACC,GACf,OAAa,GAANA,GAELC,EAAY,SAACD,GACf,OAAOA,EAAM,IAEjB,EAAsCE,IAAMC,SAASJ,EAAU,KAA/D,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCH,IAAMC,SAASJ,EAAU,IAA3D,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAsCL,IAAMC,SAASJ,EAAU,KAA/D,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAA8BP,IAAMC,UAAS,GAA7C,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BT,IAAMC,UAAS,GAA7C,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAoCX,IAAMC,SACtC,IAAIW,MAAM,6DADd,mBAAOC,EAAP,KAIMC,GAJN,KAIwB,WACpBD,EAAWE,YAAc,EACzBF,EAAWG,SASThC,EAAa,SAACiC,EAAUhC,GAC1B,GAAa,UAATA,EAAkB,CAClB,GAAImB,GAAa,IAAMa,EAAW,GAAKb,GAAa,KAChD,OAEJC,GAAa,SAACnB,GAAD,OAAUA,EAAO+B,KAElC,GAAa,YAAThC,EAAoB,CACpB,GAAIqB,GAAe,IAAMW,EAAW,EAChC,OAEJV,GAAe,SAACrB,GAAD,OAAUA,EAAO+B,KAE3BT,GACDL,EAAeG,EAAcW,KAwDzC,OACI,sBAAKzB,UAAU,aAAf,UACI,uCACA,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,CACIT,MAAO,eACPC,WAAYA,EACZC,KAAM,QACNC,KAAMkB,EACNjB,WAAYY,EACZX,QAAS,cACTC,YAAa,kBACbC,YAAa,kBACbC,QAAS,iBAEb,cAAC,EAAD,CACIR,MAAO,UACPC,WAAYA,EACZC,KAAM,UACNC,KAAMoB,EACNnB,WAAYY,EACZX,QAAS,gBACTC,YAAa,oBACbC,YAAa,oBACbC,QAAS,sBAIjB,sBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKC,GAAG,cAAR,qBACA,qBAAKA,GAAG,YAAR,SAvCC,SAACP,GACd,IAAIgC,EAAUC,KAAKC,MAAMlC,EAAO,IAC5BmC,EAAUnC,EAAiB,GAAVgC,EAGrB,OADAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACxB,KAFjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GAoCRC,CAASpB,QAElC,sBAAKV,UAAU,gBAAf,UACI,wBAAQC,GAAG,aAAaC,QAAS,kBArF5B,YAEN,IAAI6B,MAAOC,UADtB,IAEIC,GAAQ,IAAIF,MAAOC,UAFR,IAGXE,EAAahB,EACjB,IAAKF,EAAS,CACV,IAAImB,EAAYC,aAAY,YACjB,IAAIL,MAAOC,UACPC,IACPtB,GAAe,SAACjB,GACZ,OAAIA,GAAQ,IAAMwC,GACdA,GAAa,EACbf,GAAW,GACXG,IACOV,GACAlB,GAAQ,GAAKwC,GACpBA,GAAa,EACbf,GAAW,GACXG,IACOR,GAEJpB,EAAO,KAElBuC,GAtBG,OAwBR,IACHI,aAAaC,QACbD,aAAaE,QAAQ,eAAgBJ,GAErCnB,GACAwB,cAAcH,aAAaI,QAAQ,iBAEvCxB,GAAYD,GAqDuC0B,IAAvC,SAES1B,EAEI,mBAAGb,MAAM,iBADT,mBAAGA,MAAM,kBAItB,wBAAQF,GAAG,QAAQC,QAAS,kBAxDxCS,EAAeN,EAAU,KACzBU,EAAeV,EAAU,KACzBQ,EAAaR,EAAU,SAEvBY,GAAW,IAoDC,SACI,mBAAGd,MAAM,gC,MCzIjCwC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.543381f0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Length = ({\r\n    title,\r\n    changeTime,\r\n    type,\r\n    time,\r\n    formatTime,\r\n    idlabel,\r\n    iddecrement,\r\n    idincrement,\r\n    idtitle\r\n}) => {\r\n    return (\r\n        <div className=\"controls\">\r\n            <div className=\"controls-title\" id={idlabel} >{title}</div>\r\n            <div className=\"controls-buttons\">\r\n                <button id={iddecrement}\r\n                    onClick={() => changeTime(-60, type)}\r\n                ><i class=\"fas fa-arrow-down\"></i></button>\r\n                <h3 id={idtitle}>{formatTime(time)}</h3>\r\n                <button id={idincrement}\r\n                    onClick={() => changeTime(60, type)}\r\n                ><i class=\"fas fa-arrow-up\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Length\r\n","import React, { useState } from \"react\";\r\nimport Length from \"./Length\";\r\n\r\n\r\nconst Clock = () => {\r\n    const timeInSeg = (num) => {\r\n        return num * 60;\r\n    };\r\n    const timeInMin = (num) => {\r\n        return num / 60;\r\n    };\r\n    const [displayTime, setDisplayTime] = React.useState(timeInSeg(25));\r\n    const [breakTime, setBreakTime] = React.useState(timeInSeg(5));\r\n    const [sessionTime, setSessionTime] = React.useState(timeInSeg(25));\r\n    const [timerOn, setTimerOn] = React.useState(false);\r\n    const [onBreak, setOnBreak] = React.useState(false);\r\n    const [breakAudio, setBreakAudio] = React.useState(\r\n        new Audio(\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\")\r\n    );\r\n\r\n    const reproducirBreak = () => {\r\n        breakAudio.currentTime = 0;\r\n        breakAudio.play();\r\n    };\r\n\r\n    const formatTime = (time) => {\r\n        const min = Math.floor(time / 60);\r\n        const seg = time % 60;\r\n        return (min < 10 ? \"0\" + min : min) + \":\" + (seg < 10 ? \"0\" + seg : seg);\r\n    };\r\n\r\n    const changeTime = (cantidad, type) => {\r\n        if (type === \"break\") {\r\n            if (breakTime <= 60 && cantidad < 0 || breakTime >= 3600) {\r\n                return;\r\n            }\r\n            setBreakTime((time) => time + cantidad);\r\n        }\r\n        if (type === \"session\") {\r\n            if (sessionTime <= 60 && cantidad < 0) {\r\n                return;\r\n            }\r\n            setSessionTime((time) => time + cantidad);\r\n\r\n            if (!timerOn) {\r\n                setDisplayTime(sessionTime + cantidad);\r\n            }\r\n        }\r\n    };\r\n\r\n    const controlTimer = () => {\r\n        const second = 1000;\r\n        let date = new Date().getTime();\r\n        let nDate = new Date().getTime() + second;\r\n        let onBreakVar = onBreak;\r\n        if (!timerOn) {\r\n            let intervalo = setInterval(() => {\r\n                date = new Date().getTime();\r\n                if (date > nDate) {\r\n                    setDisplayTime((time) => {\r\n                        if (time <= 0 && !onBreakVar) {\r\n                            onBreakVar = true;\r\n                            setOnBreak(true);\r\n                            reproducirBreak();\r\n                            return breakTime;\r\n                        } else if (time <= 0 && onBreakVar) {\r\n                            onBreakVar = false;\r\n                            setOnBreak(false);\r\n                            reproducirBreak();\r\n                            return sessionTime;\r\n                        }\r\n                        return time - 1;\r\n                    });\r\n                    nDate += second;\r\n                }\r\n            }, 30);\r\n            localStorage.clear();\r\n            localStorage.setItem(\"intervalo-id\", intervalo);\r\n        }\r\n        if (timerOn) {\r\n            clearInterval(localStorage.getItem(\"intervalo-id\"));\r\n        }\r\n        setTimerOn(!timerOn);\r\n    };\r\n\r\n    const resetTimer = () => {\r\n        setDisplayTime(timeInSeg(25));\r\n        setSessionTime(timeInSeg(25));\r\n        setBreakTime(timeInSeg(5));\r\n\r\n        setTimerOn(false);\r\n    };\r\n\r\n    const clockify = (time) => {\r\n        let minutes = Math.floor(time / 60);\r\n        let seconds = time - minutes * 60;\r\n        seconds = seconds < 10 ? '0' + seconds : seconds;\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        return minutes + ':' + seconds;\r\n    }\r\n\r\n    return (\r\n        <div className=\"timer-main\">\r\n            <h1>Clock</h1>\r\n            <div className=\"div-controls\">\r\n                <Length\r\n                    title={\"Break Length\"}\r\n                    changeTime={changeTime}\r\n                    type={\"break\"}\r\n                    time={breakTime}\r\n                    formatTime={timeInMin}\r\n                    idlabel={\"break-label\"}\r\n                    iddecrement={\"break-decrement\"}\r\n                    idincrement={\"break-increment\"}\r\n                    idtitle={\"break-length\"}\r\n                />\r\n                <Length\r\n                    title={\"Session\"}\r\n                    changeTime={changeTime}\r\n                    type={\"session\"}\r\n                    time={sessionTime}\r\n                    formatTime={timeInMin}\r\n                    idlabel={\"session-label\"}\r\n                    iddecrement={\"session-decrement\"}\r\n                    idincrement={\"session-increment\"}\r\n                    idtitle={\"session-length\"}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"timer\">\r\n                <div className=\"timer-wrapper\">\r\n                    <div id=\"timer-label\">Session</div>\r\n                    <div id=\"time-left\">{clockify(displayTime)}</div>\r\n                </div>\r\n                <div className=\"buttons-timer\">\r\n                    <button id=\"start_stop\" onClick={() => controlTimer()}>\r\n                        {\r\n                            !timerOn ?\r\n                                (<i class=\"fas fa-play\"></i>) :\r\n                                (<i class=\"fas fa-pause\"></i>)\r\n                        }\r\n                    </button>\r\n                    <button id=\"reset\" onClick={() => resetTimer()}>\r\n                        <i class=\"fas fa-sync-alt\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Clock from './components/Clock';\nimport './styles/style.css'\n\n\nReactDOM.render(\n    <Clock />,\n  document.getElementById('root')\n);"],"sourceRoot":""}